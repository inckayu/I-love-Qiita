import { ImageResponse } from '@vercel/og'
import { NextRequest } from 'next/server'

export const config = {
  runtime: 'experimental-edge',
}

export default function handler(req: NextRequest) {
  try {
    const { searchParams } = new URL(req.url)
    const hasTitle = searchParams.has('title')
    const hasAuthor = searchParams.has('author')
    const title = hasTitle ? searchParams.get('title')?.slice(0, 100) : 'undefined'
    const author = hasAuthor ? searchParams.get('author')?.slice(0, 100) : 'undefined'
    const publishedAt = searchParams.get('publishedAt') || 'undefined'
    const icon = searchParams.get('icon') || 'undefined'

    return new ImageResponse(
      (
        <div
          style={{
            backgroundImage: `url(${`data:image/svg+xml,${encodeURIComponent(
              `<svg width="1200" height="630" viewBox="0 0 1200 630" fill="none" xmlns="http://www.w3.org/2000/svg"><rect width="1200" height="630" fill="#6F23D0"/><rect x="100" y="52" width="1000" height="525" rx="40" fill="#F4F4F4"/><path d="M166.92 125H156.6V122.92L159.96 122.16V99.32L156.6 98.52V96.44H166.92V98.52L163.56 99.32V122.16L166.92 122.92V125ZM185.865 125H182.345V94.6H185.865V125ZM211.298 114.24C211.298 116.027 211.058 117.613 210.578 119C210.124 120.36 209.458 121.52 208.578 122.48C207.724 123.44 206.671 124.173 205.418 124.68C204.191 125.16 202.818 125.4 201.298 125.4C199.884 125.4 198.578 125.16 197.378 124.68C196.178 124.173 195.138 123.44 194.258 122.48C193.378 121.52 192.684 120.36 192.178 119C191.698 117.613 191.458 116.027 191.458 114.24C191.458 111.867 191.858 109.867 192.658 108.24C193.458 106.587 194.604 105.333 196.098 104.48C197.591 103.6 199.364 103.16 201.418 103.16C203.364 103.16 205.071 103.6 206.538 104.48C208.031 105.333 209.191 106.587 210.018 108.24C210.871 109.867 211.298 111.867 211.298 114.24ZM195.098 114.24C195.098 115.92 195.311 117.387 195.738 118.64C196.191 119.867 196.884 120.813 197.818 121.48C198.751 122.147 199.938 122.48 201.378 122.48C202.818 122.48 204.004 122.147 204.938 121.48C205.871 120.813 206.551 119.867 206.978 118.64C207.431 117.387 207.658 115.92 207.658 114.24C207.658 112.533 207.431 111.08 206.978 109.88C206.524 108.68 205.831 107.76 204.898 107.12C203.991 106.453 202.804 106.12 201.338 106.12C199.151 106.12 197.564 106.84 196.578 108.28C195.591 109.72 195.098 111.707 195.098 114.24ZM220.815 125L212.695 103.56H216.455L221.015 116.2C221.229 116.787 221.455 117.44 221.695 118.16C221.935 118.88 222.149 119.573 222.335 120.24C222.522 120.88 222.655 121.427 222.735 121.88H222.895C223.002 121.427 223.149 120.867 223.335 120.2C223.549 119.533 223.775 118.84 224.015 118.12C224.282 117.4 224.509 116.76 224.695 116.2L229.255 103.56H233.015L224.855 125H220.815ZM244.688 103.16C246.528 103.16 248.101 103.56 249.408 104.36C250.741 105.16 251.754 106.293 252.448 107.76C253.168 109.2 253.528 110.893 253.528 112.84V114.96H238.848C238.901 117.387 239.514 119.24 240.688 120.52C241.888 121.773 243.554 122.4 245.688 122.4C247.048 122.4 248.248 122.28 249.288 122.04C250.354 121.773 251.448 121.4 252.568 120.92V124C251.474 124.48 250.394 124.827 249.328 125.04C248.261 125.28 246.994 125.4 245.528 125.4C243.501 125.4 241.701 124.987 240.128 124.16C238.581 123.333 237.368 122.107 236.488 120.48C235.634 118.827 235.208 116.813 235.208 114.44C235.208 112.093 235.594 110.08 236.368 108.4C237.168 106.72 238.274 105.427 239.688 104.52C241.128 103.613 242.794 103.16 244.688 103.16ZM244.648 106.04C242.968 106.04 241.634 106.587 240.648 107.68C239.688 108.747 239.114 110.24 238.928 112.16H249.848C249.848 110.933 249.661 109.867 249.288 108.96C248.914 108.053 248.341 107.347 247.568 106.84C246.821 106.307 245.848 106.04 244.648 106.04ZM294.777 110.68C294.777 113 294.457 115.107 293.817 117C293.203 118.893 292.283 120.493 291.057 121.8C289.83 123.107 288.297 124.067 286.457 124.68L293.297 131.8H288.137L282.617 125.36C282.457 125.36 282.283 125.36 282.097 125.36C281.937 125.387 281.777 125.4 281.617 125.4C279.377 125.4 277.43 125.053 275.777 124.36C274.123 123.64 272.75 122.64 271.657 121.36C270.563 120.053 269.75 118.493 269.217 116.68C268.683 114.867 268.417 112.853 268.417 110.64C268.417 107.707 268.897 105.147 269.857 102.96C270.817 100.773 272.27 99.0667 274.217 97.84C276.19 96.6133 278.67 96 281.657 96C284.51 96 286.91 96.6133 288.857 97.84C290.803 99.04 292.27 100.747 293.257 102.96C294.27 105.147 294.777 107.72 294.777 110.68ZM272.217 110.68C272.217 113.08 272.55 115.147 273.217 116.88C273.883 118.613 274.91 119.947 276.297 120.88C277.71 121.813 279.483 122.28 281.617 122.28C283.777 122.28 285.537 121.813 286.897 120.88C288.283 119.947 289.31 118.613 289.977 116.88C290.643 115.147 290.977 113.08 290.977 110.68C290.977 107.08 290.23 104.267 288.737 102.24C287.243 100.187 284.883 99.16 281.657 99.16C279.497 99.16 277.71 99.6267 276.297 100.56C274.91 101.467 273.883 102.787 273.217 104.52C272.55 106.227 272.217 108.28 272.217 110.68ZM304.147 103.56V125H300.627V103.56H304.147ZM302.427 95.52C302.96 95.52 303.427 95.7067 303.827 96.08C304.253 96.4267 304.467 96.9867 304.467 97.76C304.467 98.5067 304.253 99.0667 303.827 99.44C303.427 99.8133 302.96 100 302.427 100C301.84 100 301.347 99.8133 300.947 99.44C300.547 99.0667 300.347 98.5067 300.347 97.76C300.347 96.9867 300.547 96.4267 300.947 96.08C301.347 95.7067 301.84 95.52 302.427 95.52ZM314.459 103.56V125H310.939V103.56H314.459ZM312.739 95.52C313.272 95.52 313.739 95.7067 314.139 96.08C314.566 96.4267 314.779 96.9867 314.779 97.76C314.779 98.5067 314.566 99.0667 314.139 99.44C313.739 99.8133 313.272 100 312.739 100C312.152 100 311.659 99.8133 311.259 99.44C310.859 99.0667 310.659 98.5067 310.659 97.76C310.659 96.9867 310.859 96.4267 311.259 96.08C311.659 95.7067 312.152 95.52 312.739 95.52ZM328.412 122.52C328.945 122.52 329.492 122.48 330.052 122.4C330.612 122.293 331.065 122.187 331.412 122.08V124.76C331.038 124.947 330.505 125.093 329.812 125.2C329.118 125.333 328.452 125.4 327.812 125.4C326.692 125.4 325.652 125.213 324.692 124.84C323.758 124.44 322.998 123.76 322.412 122.8C321.825 121.84 321.532 120.493 321.532 118.76V106.28H318.492V104.6L321.572 103.2L322.972 98.64H325.052V103.56H331.252V106.28H325.052V118.68C325.052 119.987 325.358 120.96 325.972 121.6C326.612 122.213 327.425 122.52 328.412 122.52ZM343.825 103.2C346.438 103.2 348.371 103.773 349.625 104.92C350.878 106.067 351.505 107.893 351.505 110.4V125H348.945L348.265 121.96H348.105C347.491 122.733 346.851 123.387 346.185 123.92C345.545 124.427 344.798 124.8 343.945 125.04C343.118 125.28 342.105 125.4 340.905 125.4C339.625 125.4 338.465 125.173 337.425 124.72C336.411 124.267 335.611 123.573 335.025 122.64C334.438 121.68 334.145 120.48 334.145 119.04C334.145 116.907 334.985 115.267 336.665 114.12C338.345 112.947 340.931 112.307 344.425 112.2L348.065 112.08V110.8C348.065 109.013 347.678 107.773 346.905 107.08C346.131 106.387 345.038 106.04 343.625 106.04C342.505 106.04 341.438 106.213 340.425 106.56C339.411 106.88 338.465 107.253 337.585 107.68L336.505 105.04C337.438 104.533 338.545 104.107 339.825 103.76C341.105 103.387 342.438 103.2 343.825 103.2ZM344.865 114.64C342.198 114.747 340.345 115.173 339.305 115.92C338.291 116.667 337.785 117.72 337.785 119.08C337.785 120.28 338.145 121.16 338.865 121.72C339.611 122.28 340.558 122.56 341.705 122.56C343.518 122.56 345.025 122.067 346.225 121.08C347.425 120.067 348.025 118.52 348.025 116.44V114.52L344.865 114.64Z" fill="#1A1A1A"/></svg>`
            )}`})`,
            backgroundRepeat: 'no-repeat',
            backgroundPosition: 'center',
            backgroundSize: '100% 100%',
            width: '100%',
            height: '100%',
            display: 'flex',
            alignItems: 'center',
            justifyContent: 'center',
            position: 'relative',
          }}
        >
          <div
            style={{
              position: 'absolute',
              top: '45%',
              left: '50%',
              transform: 'translate(-50%, -50%)',
              fontSize: 40,
              fontWeight: 'bold',
              color: '#1A1A1A',
              maxWidth: '850px',
              fontFamily: 'Noto Sans Noto Sans JP',
            }}
          >
            {title}
          </div>
          <img
            src={decodeURIComponent(icon)}
            width={75}
            height={75}
            style={{
              position: 'absolute',
              left: 150,
              bottom: 85,
              borderRadius: '50%',
            }}
            alt="author's icon"
          />
          <div
            style={{
              position: 'absolute',
              left: 245,
              bottom: 100,
              fontSize: 40,
              fontWeight: 'bold',
              color: '#1A1A1A',
              fontFamily: 'Noto Sans Noto Sans JP',
            }}
          >
            {author}
          </div>
          <div
            style={{
              position: 'absolute',
              left: 835,
              bottom: 96,
              fontSize: 40,
              fontWeight: 'bold',
              color: '#1A1A1A',
              fontFamily: 'Noto Sans Noto Sans JP',
            }}
          >
            {publishedAt}
          </div>
        </div>
      ),
      {
        width: 1200,
        height: 630,
      }
    )
  } catch {
    return new Response(`Failed to generate the image`, {
      status: 500,
    })
  }
}
